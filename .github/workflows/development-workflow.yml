name: Build and Deploy Backend

on:
  pull_request:
    types: [closed]
    branches: [dev-backend]

jobs:
  build:
    if: github.event.pull_request.merged == true
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/footalent-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/footalent-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/footalent-backend:buildcache,mode=max

  deploy:
    if: github.event.pull_request.merged == true
    name: Deploy to Koyeb
    needs: build
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3

      - name: Deploy via Koyeb Action
        uses: koyeb/koyeb-action@v1
        with:
          token: ${{ secrets.KOYEB_API_TOKEN }}
          args: |
            service update foo-talent/footalent-backend \
              --env DB_HOST=${{ secrets.DB_HOST }} \
              --env DB_PORT=${{ secrets.DB_PORT }} \
              --env DB_NAME=${{ secrets.DB_NAME }} \
              --env DB_USER=${{ secrets.DB_USER }} \
              --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              --env BASE_URL=${{ secrets.BASE_URL }} \
              --env EMAIL=${{ secrets.EMAIL }} \
              --env PASSWORD_EMAIL=${{ secrets.PASSWORD_EMAIL }} && \
            service redeploy foo-talent/footalent-backend